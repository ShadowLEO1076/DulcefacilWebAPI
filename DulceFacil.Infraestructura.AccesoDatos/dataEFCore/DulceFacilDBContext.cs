// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace DulceFacil.Infraestructura.AccesoDatos;

public partial class DulceFacilDBContext : DbContext
{
    public DulceFacilDBContext()
    {
    }

    public DulceFacilDBContext(DbContextOptions<DulceFacilDBContext> options)
        : base(options)
    {
    }

    public virtual DbSet<CategoriaCliente> CategoriaCliente { get; set; }

    public virtual DbSet<Cliente> Cliente { get; set; }

    public virtual DbSet<DetallePedido> DetallePedido { get; set; }

    public virtual DbSet<Entrega> Entrega { get; set; }

    public virtual DbSet<Pedido> Pedido { get; set; }

    public virtual DbSet<Producto> Producto { get; set; }

    public virtual DbSet<PuntoVenta> PuntoVenta { get; set; }

    public virtual DbSet<Ruta> Ruta { get; set; }

    public virtual DbSet<Zona> Zona { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("Data Source=(localdb)\\leo;Initial Catalog=DulceFacil;Integrated Security=True");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<CategoriaCliente>(entity =>
        {
            entity.HasKey(e => e.idCategoria).HasName("PK__Categori__8A3D240C38F88579");

            entity.Property(e => e.idCategoria).ValueGeneratedNever();
            entity.Property(e => e.nombreCategoria)
                .HasMaxLength(100)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Cliente>(entity =>
        {
            entity.HasKey(e => e.idCliente).HasName("PK__Cliente__885457EE4C3A68A6");

            entity.Property(e => e.idCliente).ValueGeneratedNever();
            entity.Property(e => e.direccion)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.email)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.nombre)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.telefono)
                .HasMaxLength(20)
                .IsUnicode(false);

            entity.HasOne(d => d.idCategoriaNavigation).WithMany(p => p.Cliente)
                .HasForeignKey(d => d.idCategoria)
                .HasConstraintName("FK__Cliente__idCateg__60A75C0F");

            entity.HasOne(d => d.idZonaNavigation).WithMany(p => p.Cliente)
                .HasForeignKey(d => d.idZona)
                .HasConstraintName("FK__Cliente__idZona__619B8048");
        });

        modelBuilder.Entity<DetallePedido>(entity =>
        {
            entity.HasKey(e => e.idDetalle).HasName("PK__DetalleP__49CAE2FB7B51F651");

            entity.Property(e => e.idDetalle).ValueGeneratedNever();
            entity.Property(e => e.subtotal).HasColumnType("decimal(10, 2)");

            entity.HasOne(d => d.idPedidoNavigation).WithMany(p => p.DetallePedido)
                .HasForeignKey(d => d.idPedido)
                .HasConstraintName("FK__DetallePe__idPed__71D1E811");

            entity.HasOne(d => d.idProductoNavigation).WithMany(p => p.DetallePedido)
                .HasForeignKey(d => d.idProducto)
                .HasConstraintName("FK__DetallePe__idPro__72C60C4A");
        });

        modelBuilder.Entity<Entrega>(entity =>
        {
            entity.HasKey(e => e.idEntrega).HasName("PK__Entrega__6CA5A988C48FB652");

            entity.Property(e => e.idEntrega).ValueGeneratedNever();
            entity.Property(e => e.estado)
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.HasOne(d => d.idPedidoNavigation).WithMany(p => p.Entrega)
                .HasForeignKey(d => d.idPedido)
                .HasConstraintName("FK__Entrega__idPedid__76969D2E");

            entity.HasOne(d => d.idRutaNavigation).WithMany(p => p.Entrega)
                .HasForeignKey(d => d.idRuta)
                .HasConstraintName("FK__Entrega__idRuta__75A278F5");l
        });

        modelBuilder.Entity<Pedido>(entity =>
        {
            entity.HasKey(e => e.idPedido).HasName("PK__Pedido__A9F619B7304B65FE");

            entity.Property(e => e.idPedido).ValueGeneratedNever();
            entity.Property(e => e.total).HasColumnType("decimal(10, 2)");

            entity.HasOne(d => d.idClienteNavigation).WithMany(p => p.Pedido)
                .HasForeignKey(d => d.idCliente)
                .HasConstraintName("FK__Pedido__idClient__6EF57B66");
        });

        modelBuilder.Entity<Producto>(entity =>
        {
            entity.HasKey(e => e.idProducto).HasName("PK__Producto__07F4A132E219F0E3");

            entity.Property(e => e.idProducto).ValueGeneratedNever();
            entity.Property(e => e.nombre)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.precio).HasColumnType("decimal(10, 2)");
        });

        modelBuilder.Entity<PuntoVenta>(entity =>
        {
            entity.HasKey(e => e.idPunto).HasName("PK__PuntoVen__339F00F0CC67DBEC");

            entity.Property(e => e.idPunto).ValueGeneratedNever();
            entity.Property(e => e.direccion)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.nombrePunto)
                .HasMaxLength(100)
                .IsUnicode(false);

            entity.HasOne(d => d.idZonaNavigation).WithMany(p => p.PuntoVenta)
                .HasForeignKey(d => d.idZona)
                .HasConstraintName("FK__PuntoVent__idZon__6477ECF3");
        });

        modelBuilder.Entity<Ruta>(entity =>
        {
            entity.HasKey(e => e.idRuta).HasName("PK__Ruta__E584E6F407ABF483");

            entity.Property(e => e.idRuta).ValueGeneratedNever();
            entity.Property(e => e.descripcion)
                .HasMaxLength(255)
                .IsUnicode(false);

            entity.HasMany(d => d.idZona).WithMany(p => p.idRuta)
                .UsingEntity<Dictionary<string, object>>(
                    "AsignacionZonaRuta",
                    r => r.HasOne<Zona>().WithMany()
                        .HasForeignKey("idZona")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__Asignacio__idZon__6A30C649"),
                    l => l.HasOne<Ruta>().WithMany()
                        .HasForeignKey("idRuta")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__Asignacio__idRut__693CA210"),
                    j =>
                    {
                        j.HasKey("idRuta", "idZona").HasName("PK__Asignaci__346AAB81BB0838A8");
                    });
        });

        modelBuilder.Entity<Zona>(entity =>
        {
            entity.HasKey(e => e.idZona).HasName("PK__Zona__1EE4D75C51CC5B70");

            entity.Property(e => e.idZona).ValueGeneratedNever();
            entity.Property(e => e.nombreZona)
                .HasMaxLength(100)
                .IsUnicode(false);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}